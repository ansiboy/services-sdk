{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./out/errors.js","webpack:///./out/index.js","webpack:///./out/services/image-service.js","webpack:///./out/services/permission-service.js","webpack:///./out/services/service.js","webpack:///./out/services/toolkit-service.js","webpack:///./out/services/user-service.js","webpack:///./out/settings.js","webpack:///external \"maishu-chitu-service\""],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA,8BAA8B,YAAY;AAC1C;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,8BAA8B,KAAK;AACnC;AACA,KAAK;AACL;AACA,8BAA8B,KAAK;AACnC;AACA,KAAK;AACL;AACA,qBAAqB,SAAS,GAAG,MAAM;AACvC;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;;;;AC9Ba;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,qDAAoB;AAC5C;AACA,sBAAsB,mBAAO,CAAC,iEAA0B;AACxD;AACA,qBAAqB,mBAAO,CAAC,+DAAyB;AACtD;AACA,wBAAwB,mBAAO,CAAC,qEAA4B;AAC5D;AACA,2BAA2B,mBAAO,CAAC,2EAA+B;AAClE;AACA,WAAW,oBAAoB;AAC/B,WAAW,iBAAiB;AAC5B,iBAAiB,mBAAO,CAAC,qCAAY;AACrC;;;;;;;;;;;;;ACfa;AACb;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,4CAAW;AACrC,iBAAiB,mBAAO,CAAC,kCAAW;AACpC,mBAAmB,mBAAO,CAAC,sCAAa;AACxC;AACA;AACA;AACA;AACA;AACA,kBAAkB,qBAAqB,GAAG,KAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI,MAAM,GAAG;AAC9B;AACA,kCAAkC,MAAM;AACxC;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mCAAmC;AAC5D;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,yBAAyB,qBAAqB;AAC9C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qBAAqB;AAC9D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,KAAK;AAC9C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7Ka;AACb;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,4CAAW;AACrC,iBAAiB,mBAAO,CAAC,kCAAW;AACpC,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,sCAAsC,KAAK;AAC3C,aAAa;AACb;AACA;AACA,6CAA6C,OAAO;AACpD,aAAa;AACb;AACA;AACA,6CAA6C,KAAK;AAClD,aAAa;AACb;AACA;AACA,6CAA6C,OAAO;AACpD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,SAAS;AAChE;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,4CAA4C,OAAO;AACnD,aAAa;AACb;AACA;AACA,4CAA4C,KAAK;AACjD,aAAa;AACb;AACA;AACA,uCAAuC,KAAK;AAC5C,aAAa;AACb;AACA;AACA,6CAA6C,OAAO;AACpD,aAAa;AACb;AACA;AACA,6CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA,wDAAwD,OAAO;AAC/D;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,yDAAyD,aAAa;AACtE;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,6CAA6C,OAAO;AACpD;AACA,aAAa;AACb;AACA;AACA,oDAAoD,OAAO;AAC3D;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,kBAAkB,0BAA0B,GAAG,KAAK;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,aAAa,QAAQ,OAAO;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,OAAO;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,SAAS,oBAAoB;AAC7D,8EAA8E,OAAO;AACrF;AACA;AACA,0BAA0B,6BAA6B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,KAAK;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,GAAG,gBAAgB,WAAW;AACtE;AACA,mDAAmD,SAAS;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,KAAK;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,sBAAsB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kBAAkB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,eAAe;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,KAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,OAAO;AAC3D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,OAAO;AAC3D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,2BAA2B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,oBAAoB;AACpE;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,gCAAgC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,sCAAsC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4BAA4B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,4CAA4C;AAC5F;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,SAAS;AAC3D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,OAAO;AACvD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,aAAa;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kBAAkB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,oBAAoB;AACnE;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;ACrfa;AACb;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D,+BAA+B,mBAAO,CAAC,kDAAsB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,0BAA0B,eAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,uCAAuC;AACjF;AACA;AACA;AACA;AACA,mBAAmB;AACnB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;AAChE,iCAAiC,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;AAC7D;AACA;AACA;AACA;;;;;;;;;;;;;AC3Ia;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,4CAAW;AACrC,iBAAiB,mBAAO,CAAC,kCAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uBAAuB,GAAG,KAAK;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBa;AACb,8CAA8C,cAAc;AAC5D,6BAA6B,mBAAO,CAAC,kEAAsB;AAC3D;AACA;AACA;AACA;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,iEAA0B;AAC1D,6BAA6B,mBAAO,CAAC,2EAA+B;AACpE,0BAA0B,mBAAO,CAAC,qEAA4B;AAC9D;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;ACrCA,kE","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"maishu-chitu-service\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"maishu-chitu-service\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"maishu-chitu-service\")) : factory(root[\"maishu-chitu-service\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(typeof window === 'undefined' ? global : window, function(__WEBPACK_EXTERNAL_MODULE_maishu_chitu_service__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./out/index.js\");\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.errors = {\r\n    serviceUrlCanntNull(serviceName) {\r\n        let msg = `Service '${serviceName}' base url can not null.`;\r\n        return new Error(msg);\r\n    },\r\n    unexpectedNullResult() {\r\n        let msg = `Null result is unexpected.`;\r\n        return new Error(msg);\r\n    },\r\n    unexpectedNullValue(name) {\r\n        let msg = `variable ${name} is unexpected null value.`;\r\n        return new Error(msg);\r\n    },\r\n    argumentNull(name) {\r\n        let msg = `Arugment ${name} cannt null or empty.`;\r\n        return new Error(msg);\r\n    },\r\n    fieldNull(field, itemName) {\r\n        let msg = `${itemName} ${field} cannt be null or empty`;\r\n        return new Error(msg);\r\n    },\r\n    instanceMessangerStart() {\r\n        let msg = `Instance messanger is start.`;\r\n        return new Error(msg);\r\n    },\r\n    notSupportedInNode() {\r\n        let msg = `Not implement in node environment.`;\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar service_1 = require(\"./services/service\");\r\nexports.Service = service_1.Service;\r\nvar image_service_1 = require(\"./services/image-service\");\r\nexports.ImageService = image_service_1.ImageService;\r\nvar user_service_1 = require(\"./services/user-service\");\r\nexports.UserService = user_service_1.UserService;\r\nvar toolkit_service_1 = require(\"./services/toolkit-service\");\r\nexports.ToolkitService = toolkit_service_1.ToolkitService;\r\nvar permission_service_1 = require(\"./services/permission-service\");\r\nexports.PermissionService = permission_service_1.PermissionService;\r\n// export { InstanceMessanger } from './services/instance-messanger'\r\n// export { MessageService } from './services/message-service'\r\nvar settings_1 = require(\"./settings\");\r\nexports.settings = settings_1.settings;\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst service_1 = require(\"./service\");\r\nconst errors_1 = require(\"../errors\");\r\nconst settings_1 = require(\"../settings\");\r\n/** 图片服务，实现图片的上传，获取 */\r\nclass ImageService extends service_1.Service {\r\n    url(path) {\r\n        if (!ImageService.baseUrl)\r\n            throw errors_1.errors.serviceUrlCanntNull('imageService');\r\n        return `${ImageService.baseUrl}/${path}`;\r\n    }\r\n    /** 获取图片的 URL\r\n     * @param id 图片的 ID\r\n     * @param width 图片的宽度，如果不指定则为实际图片的宽度\r\n     * @param height 图片的高度，如果不指定则为实际图片的高度\r\n     */\r\n    imageSource(id, width, height) {\r\n        if (id != null && id.startsWith(\"http://\"))\r\n            return id;\r\n        if (id != null && id.indexOf(\"/\") >= 0)\r\n            return id;\r\n        if (!id) {\r\n            width = width == null ? 200 : width;\r\n            height = height == null ? 100 : height;\r\n            id = this.generateImageBase64(width, height, settings_1.settings.noImageText);\r\n            return id;\r\n        }\r\n        let isBase64 = id.startsWith('data:image');\r\n        if (isBase64) {\r\n            return id;\r\n        }\r\n        let url = this.url('image');\r\n        url = `${url}?id=${id}`;\r\n        if (width != null)\r\n            url = url + `&width=${width}`;\r\n        if (height != null)\r\n            url = url + `&height=${height}`;\r\n        return url;\r\n    }\r\n    generateImageBase64(width, height, obj, options) {\r\n        if (document == null) {\r\n            throw errors_1.errors.notSupportedInNode();\r\n        }\r\n        var canvas = document.createElement('canvas');\r\n        canvas.width = width; //img_width;\r\n        canvas.height = height; //img_height;\r\n        var ctx = canvas.getContext('2d');\r\n        if (ctx == null)\r\n            throw new Error('ccreate canvas context fail.');\r\n        let draw = typeof obj == 'string' ? draws.text(obj, options) : obj;\r\n        draw(ctx, width, height);\r\n        return canvas.toDataURL();\r\n    }\r\n    getImageSize(imageBase64) {\r\n        if (!imageBase64)\r\n            throw errors_1.errors.argumentNull('imageBase64');\r\n        return new Promise((resolve, reject) => {\r\n            var i = new Image();\r\n            i.onload = function () {\r\n                resolve({ width: i.width, height: i.height });\r\n            };\r\n            i.src = imageBase64;\r\n        });\r\n    }\r\n    /**\r\n     * 对图片进行缩放\r\n     * @param imageBase64 图片 base64 格式数据\r\n     * @param width 目标图片的宽度\r\n     * @param height 目标图片的高度\r\n     */\r\n    resize(imageBase64, width, height) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!imageBase64)\r\n                throw errors_1.errors.argumentNull('imageBase64');\r\n            if (!width)\r\n                throw errors_1.errors.argumentNull('width');\r\n            if (!height)\r\n                throw errors_1.errors.argumentNull('height');\r\n            var canvas = document.createElement('canvas'); //.getElementById(\"canvas\");\r\n            var ctx = canvas.getContext(\"2d\");\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n            return yield new Promise((resolve, reject) => {\r\n                var img = new Image();\r\n                img.src = imageBase64;\r\n                img.onload = function () {\r\n                    // width = img.width\r\n                    // height = img.height\r\n                    if (ctx == null)\r\n                        throw 'get canvas context fail';\r\n                    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n                    resolve(canvas.toDataURL());\r\n                };\r\n            });\r\n        });\r\n    }\r\n    list(args) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let url = `${ImageService.baseUrl}/list`;\r\n            let result = yield this.postByJson(url, args);\r\n            return result;\r\n        });\r\n    }\r\n    /**\r\n     * 上传图片\r\n     * @param imageBase64 图片的 base64 数据\r\n     */\r\n    upload(imageBase64) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!imageBase64)\r\n                throw errors_1.errors.argumentNull('imageBase64');\r\n            let url = this.url('upload');\r\n            let imageSize = yield this.getImageSize(imageBase64);\r\n            let maxWidth = 800;\r\n            let maxHeight = 800;\r\n            if (imageSize.width > maxWidth) { // || imageSize.height > maxHeight\r\n                let height = imageSize.height / imageSize.width * maxWidth;\r\n                imageBase64 = yield this.resize(imageBase64, maxWidth, height);\r\n            }\r\n            else if (imageSize.height > maxHeight) {\r\n                let width = imageSize.width / imageSize.height * maxHeight;\r\n                imageBase64 = yield this.resize(imageBase64, width, maxHeight);\r\n            }\r\n            return this.postByJson(url, { image: imageBase64 });\r\n        });\r\n    }\r\n    /**\r\n     *\r\n     * @param id 删除图片\r\n     */\r\n    remove(id) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!id)\r\n                throw errors_1.errors.argumentNull('id');\r\n            let url = this.url(\"remove\");\r\n            return this.postByJson(url, { id });\r\n        });\r\n    }\r\n}\r\nexports.ImageService = ImageService;\r\nlet draws = {\r\n    text: (imageText, options) => {\r\n        return (ctx, canvasWidth, canvasHeight) => {\r\n            // let fontSize1 = Math.floor(canvasHeight / 3 * 0.8);\r\n            let fontSize = Math.floor((canvasWidth / imageText.length) * 0.6);\r\n            let bgColor = 'whitesmoke';\r\n            let textColor = '#999';\r\n            // let fontSize = Math.min(fontSize1, fontSize2);\r\n            options = options || {};\r\n            ctx.fillStyle = options.bgColor || bgColor; //'whitesmoke';\r\n            ctx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n            // 设置字体\r\n            ctx.font = `Bold ${options.fontSize}px Arial`;\r\n            // 设置对齐方式\r\n            ctx.textAlign = \"left\";\r\n            // 设置填充颜色\r\n            ctx.fillStyle = options.textColor || textColor; //\"#999\";\r\n            let textWidth = fontSize * imageText.length;\r\n            let startX = Math.floor((canvasWidth - textWidth) * 0.5);\r\n            let startY = Math.floor((canvasHeight - (options.fontSize || fontSize)) * 0.3);\r\n            // 设置字体内容，以及在画布上的位置\r\n            ctx.fillText(imageText, startX, Math.floor(canvasHeight * 0.6));\r\n        };\r\n    }\r\n};\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst service_1 = require(\"./service\");\r\nconst errors_1 = require(\"../errors\");\r\n// import { events } from \"../events\";\r\nclass PermissionService extends service_1.Service {\r\n    constructor() {\r\n        super();\r\n        this.currentUser = {\r\n            resource: {\r\n                list: () => {\r\n                    let url = this.url(\"current-user/resource/list\");\r\n                    return this.get(url);\r\n                }\r\n            }\r\n        };\r\n        this.role = {\r\n            list: () => {\r\n                let url = this.url(\"role/list\");\r\n                return this.get(url);\r\n            },\r\n            item: (id) => {\r\n                let url = this.url(\"role/item\");\r\n                return this.get(url, { id });\r\n            },\r\n            add: (item) => {\r\n                let url = this.url(\"role/add\");\r\n                return this.postByJson(url, { item });\r\n            },\r\n            remove: (id) => {\r\n                let url = this.url(\"role/remove\");\r\n                return this.postByJson(url, { id });\r\n            },\r\n            update: (item) => {\r\n                let url = this.url(\"role/update\");\r\n                return this.postByJson(url, { item });\r\n            },\r\n            resource: {\r\n                /**\r\n                 * 获取角色所允许访问的资源 id\r\n                 * @param roleId 指定的角色编号\r\n                 */\r\n                ids: (roleId) => __awaiter(this, void 0, void 0, function* () {\r\n                    if (!roleId)\r\n                        throw errors_1.errors.argumentNull('roleId');\r\n                    let url = this.url('role/resourceIds');\r\n                    let r = yield this.getByJson(url, { roleId });\r\n                    return r || [];\r\n                })\r\n            }\r\n        };\r\n        this.resource = {\r\n            list: (args) => {\r\n                let url = this.url(\"resource/list\");\r\n                return this.getByJson(url, { args });\r\n            },\r\n            item: (id) => {\r\n                let url = this.url(\"resource/item\");\r\n                return this.getByJson(url, { id });\r\n            },\r\n            remove: (id) => {\r\n                let url = this.url(\"resource/remove\");\r\n                return this.post(url, { id });\r\n            },\r\n            add: (item) => {\r\n                let url = this.url(\"resource/add\");\r\n                return this.postByJson(url, { item });\r\n            },\r\n            update: (item) => {\r\n                let url = this.url(\"resource/update\");\r\n                return this.postByJson(url, { item });\r\n            }\r\n        };\r\n        this.user = {\r\n            list: (args) => __awaiter(this, void 0, void 0, function* () {\r\n                let url = this.url('user/list');\r\n                let result = yield this.getByJson(url, { args });\r\n                if (result == null)\r\n                    throw errors_1.errors.unexpectedNullResult();\r\n                return result;\r\n            }),\r\n            update: (item) => __awaiter(this, void 0, void 0, function* () {\r\n                let url = this.url('user/update');\r\n                let result = yield this.postByJson(url, { user: item });\r\n                return result;\r\n            })\r\n        };\r\n        this.token = {\r\n            list: (args) => __awaiter(this, void 0, void 0, function* () {\r\n                let url = this.url('token/list');\r\n                let r = this.getByJson(url, { args });\r\n                return r;\r\n            }),\r\n            add: (item) => __awaiter(this, void 0, void 0, function* () {\r\n                let url = this.url(\"token/add\");\r\n                let r = yield this.postByJson(url, { item });\r\n                return r;\r\n            })\r\n        };\r\n    }\r\n    url(path) {\r\n        if (!PermissionService.baseUrl)\r\n            throw errors_1.errors.serviceUrlCanntNull('permissionService');\r\n        return `${PermissionService.baseUrl}/${path}`;\r\n    }\r\n    // //=============================================================\r\n    // // 资源相关\r\n    // /** 添加资源 */\r\n    // async addResource(item: Partial<Resource>) {\r\n    //     if (!item) throw errors.argumentNull('item')\r\n    //     let url = this.url('resource/add')\r\n    //     let result = await this.postByJson<{ id: string }>(url, { item })\r\n    //     Object.assign(item, result)\r\n    //     return result\r\n    // }\r\n    // /** 更新资源 */\r\n    // async updateResource(item: Partial<Resource>) {\r\n    //     if (!item) throw errors.argumentNull('item')\r\n    //     let url = this.url('resource/update')\r\n    //     let result = await this.postByJson(url, { item })\r\n    //     Object.assign(item, result)\r\n    //     return result\r\n    // }\r\n    // /** 获取资源列表 */\r\n    // async getResourceList(args: DataSourceSelectArguments): Promise<DataSourceSelectResult<Resource>> {\r\n    //     if (!args) throw errors.argumentNull('args')\r\n    //     let url = this.url('resource/list')\r\n    //     if (!args.sortExpression)\r\n    //         args.sortExpression = 'sort_number asc'\r\n    //     type T = Resource & { data?: { visible?: boolean } }\r\n    //     let result = await this.getByJson<DataSourceSelectResult<T>>(url, { args })\r\n    //     if (result == null)\r\n    //         throw errors.unexpectedNullResult()\r\n    //     for (let i = 0; i < result.dataItems.length; i++) {\r\n    //         result.dataItems[i].data = result.dataItems[i].data || {}\r\n    //     }\r\n    //     return result\r\n    // }\r\n    // /**\r\n    //  * 删除指定的资源\r\n    //  * @param id 要删除的资源编号\r\n    //  */\r\n    // async deleteResource(id: string) {\r\n    //     if (!id) throw errors.argumentNull('id')\r\n    //     let url = this.url('resource/remove')\r\n    //     return this.postByJson(url, { id })\r\n    // }\r\n    // /**\r\n    //  * 获取指定资源的子按钮\r\n    //  * @param id 资源编号\r\n    //  */\r\n    // async getResourceChildCommands(id: string) {\r\n    //     if (!id) throw errors.argumentNull('id')\r\n    //     let buttonType: ResourceType = 'button'\r\n    //     let filter = `parent_id = '${id}' and type = '${buttonType}'`\r\n    //     let url = `resource/list`\r\n    //     let result = await this.getByJson(url, { filter })\r\n    //     return result\r\n    // }\r\n    //=============================================================\r\n    // 角色相关\r\n    /**\r\n     * 获取角色列表\r\n     */\r\n    getRoles() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let url = this.url('role/list');\r\n            let r = yield this.getByJson(url);\r\n            return r || [];\r\n        });\r\n    }\r\n    /**\r\n     * 获取单个角色\r\n     * @param id 要获取的角色编号\r\n     */\r\n    getRole(id) {\r\n        if (!id)\r\n            throw errors_1.errors.argumentNull('id');\r\n        let url = this.url('role/get');\r\n        return this.getByJson(url, { id });\r\n    }\r\n    /**\r\n     *\r\n     * @param roleId 指定的角色编号\r\n     * @param resourceIds 角色所允许访问的资源编号\r\n     */\r\n    setRoleResource(roleId, resourceIds) {\r\n        if (!roleId)\r\n            throw errors_1.errors.argumentNull('roleId');\r\n        if (!resourceIds)\r\n            throw errors_1.errors.argumentNull('resourceIds');\r\n        let url = this.url('role/setResources');\r\n        return this.postByJson(url, { roleId, resourceIds });\r\n    }\r\n    /**\r\n     * 获取角色所允许访问的资源 id\r\n     * @param roleId 指定的角色编号\r\n     */\r\n    getRoleResourceIds(roleId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!roleId)\r\n                throw errors_1.errors.argumentNull('roleId');\r\n            let url = this.url('role/resourceIds');\r\n            let r = yield this.getByJson(url, { roleId });\r\n            return r || [];\r\n        });\r\n    }\r\n    /** 设置用户角色 */\r\n    setUserRoles(userId, roleIds) {\r\n        if (!userId)\r\n            throw errors_1.errors.argumentNull('userId');\r\n        if (!roleIds)\r\n            throw errors_1.errors.argumentNull('roleIds');\r\n        let url = this.url('user/setRoles');\r\n        return this.postByJson(url, { userId, roleIds });\r\n    }\r\n    /**\r\n     * 添加角色\r\n     * @param name 要添加的角色名称\r\n     * @param remark 要添加的角色备注\r\n     */\r\n    addRole(name, remark) {\r\n        if (!name)\r\n            throw errors_1.errors.argumentNull(\"name\");\r\n        let url = this.url(\"role/add\");\r\n        return this.postByJson(url, { name, remark });\r\n    }\r\n    /**\r\n     * 删除角色\r\n     * @param id 要删除的角色编号\r\n     */\r\n    removeRole(id) {\r\n        if (!id)\r\n            throw errors_1.errors.argumentNull(\"id\");\r\n        let url = this.url(\"role/remove\");\r\n        return this.postByJson(url, { id });\r\n    }\r\n    //================================================================\r\n    // 用户相关\r\n    /** 获取用户列表 */\r\n    getUserList(args) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let url = this.url('user/list');\r\n            let result = yield this.getByJson(url, { args });\r\n            if (result == null)\r\n                throw errors_1.errors.unexpectedNullResult();\r\n            return result;\r\n        });\r\n    }\r\n    /** 通过手机获取用户 */\r\n    getUserByMobile(mobile) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!mobile)\r\n                throw errors_1.errors.argumentNull('mobile');\r\n            let args = {};\r\n            args.filter = `mobile = '${mobile}'`;\r\n            let r = yield this.getUserList(args);\r\n            return r.dataItems[0];\r\n        });\r\n    }\r\n    /**\r\n     * 移除当前应用的用户\r\n     * @param userId 要移除的用户编号\r\n     */\r\n    removeUser(userId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!userId)\r\n                throw errors_1.errors.argumentNull('userId');\r\n            let url = this.url('application/removeUser');\r\n            return this.deleteByJson(url, { userId });\r\n        });\r\n    }\r\n    /**\r\n     * 获取当前应用的所有用户\r\n     * @param args 数据源选择参数\r\n     */\r\n    getApplicatinUsers(args) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (args == null)\r\n                throw errors_1.errors.argumentNull('args');\r\n            let url = this.url('application/users');\r\n            let result = yield this.getByJson(url, { args });\r\n            if (result == null)\r\n                throw errors_1.errors.unexpectedNullResult();\r\n            return result;\r\n        });\r\n    }\r\n    /**\r\n     * 发送注册操作验证码\r\n     * @param mobile 接收验证码的手机号\r\n     */\r\n    sendRegisterVerifyCode(mobile) {\r\n        let url = this.url('sms/sendVerifyCode');\r\n        return this.postByJson(url, { mobile, type: 'register' });\r\n    }\r\n    /**\r\n     * 校验验证码\r\n     * @param smsId 验证码信息的 ID 号\r\n     * @param verifyCode 验证码\r\n     */\r\n    checkVerifyCode(smsId, verifyCode) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!smsId)\r\n                throw errors_1.errors.argumentNull('smsId');\r\n            if (!verifyCode)\r\n                throw errors_1.errors.argumentNull('verifycode');\r\n            let url = this.url('sms/checkVerifyCode');\r\n            let r = yield this.postByJson(url, { smsId, verifyCode });\r\n            return r;\r\n        });\r\n    }\r\n    /**\r\n     * 发送重置密码操作验证码\r\n     * @param mobile 接收验证码的手机号\r\n     */\r\n    sendResetVerifyCode(mobile) {\r\n        if (!mobile)\r\n            throw errors_1.errors.argumentNull('mobile');\r\n        let url = this.url('sms/sendVerifyCode');\r\n        return this.postByJson(url, { mobile, type: 'resetPassword' });\r\n    }\r\n    /**\r\n     * 重置密码\r\n     * @param mobile 手机号\r\n     * @param password 新密码\r\n     * @param smsId 短信编号\r\n     * @param verifyCode 验证码\r\n     */\r\n    resetPassword(mobile, password, smsId, verifyCode) {\r\n        if (!mobile)\r\n            throw errors_1.errors.argumentNull('mobile');\r\n        if (!password)\r\n            throw errors_1.errors.argumentNull('password');\r\n        if (!smsId)\r\n            throw errors_1.errors.argumentNull('smsId');\r\n        if (!verifyCode)\r\n            throw errors_1.errors.argumentNull('verifyCode');\r\n        let url = this.url('user/resetPassword');\r\n        return this.postByJson(url, { mobile, password, smsId, verifyCode });\r\n    }\r\n    /**\r\n     * 重置手机号码\r\n     * @param mobile 需要重置的新手机号\r\n     * @param smsId 短信编号\r\n     * @param verifyCode 验证码\r\n     */\r\n    resetMobile(mobile, smsId, verifyCode) {\r\n        if (!mobile)\r\n            throw errors_1.errors.argumentNull('mobile');\r\n        if (!smsId)\r\n            throw errors_1.errors.argumentNull('smsId');\r\n        if (!verifyCode)\r\n            throw errors_1.errors.argumentNull('verifyCode');\r\n        let url = this.url('user/resetMobile');\r\n        return this.postByJson(url, { mobile, smsId, verifyCode });\r\n    }\r\n    /**\r\n     * 退出登录\r\n     */\r\n    logout() {\r\n        // if (Service.loginInfo.value == null)\r\n        //     return\r\n        //TODO: 将服务端 token 设置为失效\r\n        // events.logout.fire(this, Service.loginInfo.value)\r\n        // Service.setStorageLoginInfo(null)\r\n        // Service.loginInfo.value = null\r\n    }\r\n    login(arg0, password) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let args;\r\n            let username;\r\n            if (typeof arg0 == \"string\") {\r\n                username = arg0;\r\n                if (!username)\r\n                    throw errors_1.errors.argumentNull('username');\r\n                if (!password)\r\n                    throw errors_1.errors.argumentNull('password');\r\n                args = { username, password };\r\n            }\r\n            else {\r\n                args = arg0;\r\n            }\r\n            let url = this.url('user/login');\r\n            let r = yield this.postByJson(url, args);\r\n            if (r == null)\r\n                throw errors_1.errors.unexpectedNullResult();\r\n            // Service.loginInfo.value = r\r\n            // Service.setStorageLoginInfo(r)\r\n            // events.login.fire(this, r)\r\n            return r;\r\n        });\r\n    }\r\n    /**\r\n     * 注册\r\n     * @param mobile 手机号\r\n     * @param password 密码\r\n     * @param smsId 短信编号\r\n     * @param verifyCode 验证码\r\n     */\r\n    register(mobile, password, smsId, verifyCode, data) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!mobile)\r\n                throw errors_1.errors.argumentNull('mobile');\r\n            if (!password)\r\n                throw errors_1.errors.argumentNull('password');\r\n            if (!smsId)\r\n                throw errors_1.errors.argumentNull('smsId');\r\n            if (!verifyCode)\r\n                throw errors_1.errors.argumentNull('verifyCode');\r\n            let url = this.url('user/register');\r\n            let r = yield this.postByJson(url, { mobile, password, smsId, verifyCode, data });\r\n            if (r == null)\r\n                throw errors_1.errors.unexpectedNullResult();\r\n            // Service.setStorageLoginInfo(r)\r\n            // events.register.fire(this, r)\r\n            return r;\r\n        });\r\n    }\r\n    /**\r\n     * 获取用户个人信息\r\n     */\r\n    me() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // if (!Service.loginInfo.value) {\r\n            //     return null\r\n            // }\r\n            let url = this.url('user/me');\r\n            let user = yield this.getByJson(url);\r\n            return user;\r\n        });\r\n    }\r\n    /**\r\n     * 获取用户\r\n     * @param userId 用户编号\r\n     */\r\n    getUser(userId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let url = this.url('user/item');\r\n            let user = yield this.getByJson(url, { userId });\r\n            return user;\r\n        });\r\n    }\r\n    /**\r\n     * 添加用户信息\r\n     * @param item 用户\r\n     */\r\n    addUser(item) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let url = this.url('user/add');\r\n            let result;\r\n            let r = yield this.postByJson(url, { item });\r\n            return r;\r\n        });\r\n    }\r\n    /**\r\n     * 更新用户信息\r\n     * @param item 用户\r\n     */\r\n    updateUser(item) {\r\n        let url = this.url('user/update');\r\n        return this.postByJson(url, { user: item });\r\n    }\r\n    /**\r\n     * 获取当前登录用户的角色\r\n     */\r\n    myRoles() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let url = this.url('user/getRoles');\r\n            let roles = yield this.getByJson(url);\r\n            return roles;\r\n        });\r\n    }\r\n    /**\r\n     * 给指定的用户添加角色\r\n     * @param userId 用户编号\r\n     * @param roleIds 多个角色编号\r\n     */\r\n    addUserRoles(userId, roleIds) {\r\n        let url = this.url('user/addRoles');\r\n        return this.postByJson(url, { userId, roleIds });\r\n    }\r\n    /**\r\n     * 获取用角色\r\n     * @param userId 用户编号\r\n     */\r\n    getUserRoles(userId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let url = this.url('role/userRoles');\r\n            let r = yield this.getByJson(url, { userIds: [userId] });\r\n            return r[userId];\r\n        });\r\n    }\r\n}\r\nexports.PermissionService = PermissionService;\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst maishu_chitu_service_1 = require(\"maishu-chitu-service\");\r\nclass Service extends maishu_chitu_service_1.Service {\r\n    // static readonly LoginInfoStorageName = 'app-login-info'\r\n    // static loginInfo = new ValueStore<LoginInfo | null>(Service.getStorageLoginInfo())\r\n    // static applicationId: string | (() => string)\r\n    // static getStorageLoginInfo(): LoginInfo | null {\r\n    //     let loginInfoSerialString = this.getCookie(Service.LoginInfoStorageName)\r\n    //     if (!loginInfoSerialString)\r\n    //         return null\r\n    //     try {\r\n    //         let loginInfo = JSON.parse(loginInfoSerialString)\r\n    //         return loginInfo\r\n    //     }\r\n    //     catch (e) {\r\n    //         console.error(e)\r\n    //         console.log(loginInfoSerialString)\r\n    //         return null\r\n    //     }\r\n    // }\r\n    // protected static setStorageLoginInfo(value: LoginInfo | null) {\r\n    //     if (value == null) {\r\n    //         this.removeCookie(Service.LoginInfoStorageName)\r\n    //         return\r\n    //     }\r\n    //     this.setCookie(Service.LoginInfoStorageName, JSON.stringify(value), 1000)\r\n    // }\r\n    // private static setCookie(name: string, value: string, days?: number) {\r\n    //     // nodejs 没有 document\r\n    //     if (typeof document == 'undefined')\r\n    //         return;\r\n    //     var expires = \"\";\r\n    //     if (days) {\r\n    //         var date = new Date();\r\n    //         date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\r\n    //         expires = \"; expires=\" + date.toUTCString();\r\n    //     }\r\n    //     document.cookie = name + \"=\" + (value || \"\") + expires + \"; path=/\";\r\n    // }\r\n    // private static getCookie(name: string) {\r\n    //     if (typeof document == 'undefined')\r\n    //         return null;\r\n    //     var nameEQ = name + \"=\";\r\n    //     var ca = document.cookie.split(';');\r\n    //     for (var i = 0; i < ca.length; i++) {\r\n    //         var c = ca[i];\r\n    //         while (c.charAt(0) == ' ') c = c.substring(1, c.length);\r\n    //         if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\r\n    //     }\r\n    //     return null;\r\n    // }\r\n    // private static removeCookie(name: string) {\r\n    //     // document.cookie = name + '=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\r\n    //     this.setCookie(name, '')\r\n    // }\r\n    ajax(url, options) {\r\n        const _super = Object.create(null, {\r\n            ajax: { get: () => super.ajax }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            options = options || {};\r\n            options.headers = options.headers || {};\r\n            // if (Service.loginInfo.value)\r\n            //     options.headers['token'] = Service.loginInfo.value.token\r\n            // if (Service.applicationId)\r\n            //     options.headers['application-id'] = typeof Service.applicationId == 'function' ? Service.applicationId() : Service.applicationId\r\n            let data = yield _super.ajax.call(this, url, options);\r\n            if (data == null) {\r\n                return null;\r\n            }\r\n            let obj = data;\r\n            if (obj.code && obj.message) {\r\n                throw new Error(obj.message);\r\n            }\r\n            if (obj != null && obj['DataItems'] != null && obj['TotalRowCount'] != null) {\r\n                let d = {};\r\n                let keys = Object.keys(data);\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    let key = keys[i];\r\n                    let k = key[0].toLowerCase() + key.substr(1);\r\n                    d[k] = obj[key];\r\n                }\r\n                data = d;\r\n            }\r\n            this.travelJSON(data);\r\n            return data;\r\n        });\r\n    }\r\n    /**\r\n     * 遍历 JSON 对象各个字段，将日期字符串转换为 Date 对象\r\n     * @param obj 要转换的 JSON 对象\r\n     */\r\n    travelJSON(obj) {\r\n        if (typeof obj === 'string' && this.isDateString(obj)) {\r\n            return new Date(obj);\r\n        }\r\n        else if (typeof obj === 'string') {\r\n            return obj;\r\n        }\r\n        var stack = new Array();\r\n        stack.push(obj);\r\n        while (stack.length > 0) {\r\n            var item = stack.pop();\r\n            for (var key in item) {\r\n                var value = item[key];\r\n                if (value == null)\r\n                    continue;\r\n                if (value instanceof Array) {\r\n                    for (var i = 0; i < value.length; i++) {\r\n                        stack.push(value[i]);\r\n                    }\r\n                    continue;\r\n                }\r\n                if (typeof value == 'object') {\r\n                    stack.push(value);\r\n                    continue;\r\n                }\r\n                if (typeof value == 'string' && this.isDateString(value)) {\r\n                    item[key] = new Date(value);\r\n                }\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n    isDateString(text) {\r\n        const datePattern = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/;\r\n        const datePattern1 = /\\d{4}-\\d{2}-\\d{2}\\s+\\d{2}:\\d{2}/;\r\n        return text.match(datePattern) != null || text.match(datePattern1) != null;\r\n    }\r\n}\r\nexports.Service = Service;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst service_1 = require(\"./service\");\r\nconst errors_1 = require(\"../errors\");\r\nclass ToolkitService extends service_1.Service {\r\n    constructor() {\r\n        super();\r\n    }\r\n    url(path) {\r\n        if (!path)\r\n            throw new Error('Argument path cannt be null or empty.');\r\n        if (!ToolkitService.baseUrl)\r\n            throw errors_1.errors.serviceUrlCanntNull('toolServiceUrl');\r\n        return `${ToolkitService.baseUrl}/${path}`;\r\n    }\r\n    /** 获取系统自动生成不重复的唯一数字 */\r\n    uniqueNumber() {\r\n        let url = this.url('unique-number');\r\n        return this.getByJson(url);\r\n    }\r\n}\r\nexports.ToolkitService = ToolkitService;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst permission_service_1 = require(\"./permission-service\");\r\n/** 与用户相关的服务，这个类已经废弃，请使用  PermissionService*/\r\nclass UserService extends permission_service_1.PermissionService {\r\n}\r\nexports.UserService = UserService;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst image_service_1 = require(\"./services/image-service\");\r\nconst permission_service_1 = require(\"./services/permission-service\");\r\nconst toolkit_service_1 = require(\"./services/toolkit-service\");\r\nexports.settings = {\r\n    noImageText: '暂无图片',\r\n    // get applicationId() {\r\n    //     return Service.applicationId\r\n    // },\r\n    // set applicationId(value) {\r\n    //     Service.applicationId = value\r\n    // },\r\n    /** 获取图片服务的 URL 地址 */\r\n    get imageServiceUrl() {\r\n        return image_service_1.ImageService.baseUrl;\r\n    },\r\n    /** 设置图片服务的 URL 地址 */\r\n    set imageServiceUrl(value) {\r\n        image_service_1.ImageService.baseUrl = value;\r\n    },\r\n    /** 获取权限管理的 URL 地址 */\r\n    get permissionServiceUrl() {\r\n        return permission_service_1.PermissionService.baseUrl;\r\n    },\r\n    /** 设置权限管理的 URL 地址 */\r\n    set permissionServiceUrl(value) {\r\n        permission_service_1.PermissionService.baseUrl = value;\r\n    },\r\n    /** 获取工具类服务的 URL 地址 */\r\n    get toolServiceUrl() {\r\n        return toolkit_service_1.ToolkitService.baseUrl;\r\n    },\r\n    /** 设置工具类服务的 URL 地址 */\r\n    set toolServiceUrl(value) {\r\n        toolkit_service_1.ToolkitService.baseUrl = value;\r\n    },\r\n};\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE_maishu_chitu_service__;"],"sourceRoot":""}