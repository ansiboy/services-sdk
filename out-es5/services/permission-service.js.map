{"version":3,"sources":["../../out/services/permission-service.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","service_1","require","errors_1","PermissionService","arguments","role","RoleModule","user","UserModule","sms","SMSModule","currentUser","resource","list","url","get","args","getByJson","item","id","remove","post","add","postByJson","update","token","r","path","baseUrl","errors","serviceUrlCanntNull","endsWith","userId","argumentNull","deleteByJson","unexpectedNullResult","userIds","Service","ServiceModule","service","bind","roleIds","mobile","filter","dataItems","password","smsId","verifyCode","arg0","username","data","roles","ids","roleId","arg1","arg2","name","remark","resourceIds","type"],"mappings":"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","sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst service_1 = require(\"./service\");\r\nconst errors_1 = require(\"../errors\");\r\n// import { events } from \"../events\";\r\nclass PermissionService extends service_1.Service {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.role = new RoleModule(this);\r\n        this.user = new UserModule(this);\r\n        this.sms = new SMSModule(this);\r\n        this.currentUser = {\r\n            resource: {\r\n                list: () => {\r\n                    let url = this.url(\"current-user/resource/list\");\r\n                    return this.get(url);\r\n                }\r\n            }\r\n        };\r\n        this.resource = {\r\n            list: (args) => {\r\n                let url = this.url(\"resource/list\");\r\n                return this.getByJson(url, { args });\r\n            },\r\n            item: (id) => {\r\n                let url = this.url(\"resource/item\");\r\n                return this.getByJson(url, { id });\r\n            },\r\n            remove: (id) => {\r\n                let url = this.url(\"resource/remove\");\r\n                return this.post(url, { id });\r\n            },\r\n            add: (item) => {\r\n                let url = this.url(\"resource/add\");\r\n                return this.postByJson(url, { item });\r\n            },\r\n            update: (item) => {\r\n                let url = this.url(\"resource/update\");\r\n                return this.postByJson(url, { item });\r\n            }\r\n        };\r\n        this.token = {\r\n            list: (args) => __awaiter(this, void 0, void 0, function* () {\r\n                let url = this.url('token/list');\r\n                let r = this.getByJson(url, { args });\r\n                return r;\r\n            }),\r\n            add: (item) => __awaiter(this, void 0, void 0, function* () {\r\n                let url = this.url(\"token/add\");\r\n                let r = yield this.postByJson(url, { item });\r\n                return r;\r\n            })\r\n        };\r\n    }\r\n    url(path) {\r\n        if (!PermissionService.baseUrl)\r\n            throw errors_1.errors.serviceUrlCanntNull('permissionService');\r\n        if (PermissionService.baseUrl.endsWith(\"/\"))\r\n            return `${PermissionService.baseUrl}${path}`;\r\n        return `${PermissionService.baseUrl}/${path}`;\r\n    }\r\n    /**\r\n     * 移除当前应用的用户\r\n     * @param userId 要移除的用户编号\r\n     */\r\n    removeUser(userId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!userId)\r\n                throw errors_1.errors.argumentNull('userId');\r\n            let url = this.url('application/removeUser');\r\n            return this.deleteByJson(url, { userId });\r\n        });\r\n    }\r\n    /**\r\n     * 获取当前应用的所有用户\r\n     * @param args 数据源选择参数\r\n     */\r\n    getApplicatinUsers(args) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (args == null)\r\n                throw errors_1.errors.argumentNull('args');\r\n            let url = this.url('application/users');\r\n            let result = yield this.getByJson(url, { args });\r\n            if (result == null)\r\n                throw errors_1.errors.unexpectedNullResult();\r\n            return result;\r\n        });\r\n    }\r\n    /**\r\n     * 获取用角色\r\n     * @param userId 用户编号\r\n     */\r\n    getUserRoles(userId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let url = this.url('role/userRoles');\r\n            let r = yield this.getByJson(url, { userIds: [userId] });\r\n            return r[userId];\r\n        });\r\n    }\r\n}\r\nexports.PermissionService = PermissionService;\r\nclass ServiceModule {\r\n    constructor(service) {\r\n        this.service = service;\r\n        this.getByJson = this.service.getByJson.bind(this.service);\r\n        this.postByJson = this.service.postByJson.bind(this.service);\r\n        this.get = this.service.get;\r\n    }\r\n    url(path) {\r\n        if (!PermissionService.baseUrl)\r\n            throw errors_1.errors.serviceUrlCanntNull('permissionService');\r\n        return `${PermissionService.baseUrl}/${path}`;\r\n    }\r\n}\r\nclass UserModule extends ServiceModule {\r\n    /** 获取用户列表 */\r\n    list(args) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let url = this.url('user/list');\r\n            let result = yield this.getByJson(url, { args });\r\n            if (result == null)\r\n                throw errors_1.errors.unexpectedNullResult();\r\n            return result;\r\n        });\r\n    }\r\n    /**\r\n     * 更新用户信息\r\n     * @param item 用户\r\n     */\r\n    update(item) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let url = this.url('user/update');\r\n            let result = yield this.postByJson(url, { user: item });\r\n            return result;\r\n        });\r\n    }\r\n    /**\r\n     * 获取用户\r\n     * @param userId 用户编号\r\n     */\r\n    item(userId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let url = this.url('user/item');\r\n            let user = yield this.getByJson(url, { userId });\r\n            return user;\r\n        });\r\n    }\r\n    /**\r\n     * 添加用户信息\r\n     * @param item 用户\r\n     */\r\n    addUser(item) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let url = this.url('user/add');\r\n            let result;\r\n            let r = yield this.postByJson(url, { item });\r\n            return r;\r\n        });\r\n    }\r\n    /** 设置用户角色 */\r\n    setRoles(userId, roleIds) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!userId)\r\n                throw errors_1.errors.argumentNull('userId');\r\n            if (!roleIds)\r\n                throw errors_1.errors.argumentNull('roleIds');\r\n            let url = this.url('user/setRoles');\r\n            return this.postByJson(url, { userId, roleIds });\r\n        });\r\n    }\r\n    /** 通过手机获取用户 */\r\n    listByMobile(mobile) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!mobile)\r\n                throw errors_1.errors.argumentNull('mobile');\r\n            let args = {};\r\n            args.filter = `mobile = '${mobile}'`;\r\n            let r = yield this.list(args);\r\n            return r.dataItems[0];\r\n        });\r\n    }\r\n    /**\r\n     * 重置密码\r\n     * @param mobile 手机号\r\n     * @param password 新密码\r\n     * @param smsId 短信编号\r\n     * @param verifyCode 验证码\r\n     */\r\n    resetPassword(mobile, password, smsId, verifyCode) {\r\n        if (!mobile)\r\n            throw errors_1.errors.argumentNull('mobile');\r\n        if (!password)\r\n            throw errors_1.errors.argumentNull('password');\r\n        if (!smsId)\r\n            throw errors_1.errors.argumentNull('smsId');\r\n        if (!verifyCode)\r\n            throw errors_1.errors.argumentNull('verifyCode');\r\n        let url = this.url('user/resetPassword');\r\n        return this.postByJson(url, { mobile, password, smsId, verifyCode });\r\n    }\r\n    /**\r\n     * 重置手机号码\r\n     * @param mobile 需要重置的新手机号\r\n     * @param smsId 短信编号\r\n     * @param verifyCode 验证码\r\n     */\r\n    resetMobile(mobile, smsId, verifyCode) {\r\n        if (!mobile)\r\n            throw errors_1.errors.argumentNull('mobile');\r\n        if (!smsId)\r\n            throw errors_1.errors.argumentNull('smsId');\r\n        if (!verifyCode)\r\n            throw errors_1.errors.argumentNull('verifyCode');\r\n        let url = this.url('user/resetMobile');\r\n        return this.postByJson(url, { mobile, smsId, verifyCode });\r\n    }\r\n    login(arg0, password) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let args;\r\n            let username;\r\n            if (typeof arg0 == \"string\") {\r\n                username = arg0;\r\n                if (!username)\r\n                    throw errors_1.errors.argumentNull('username');\r\n                if (!password)\r\n                    throw errors_1.errors.argumentNull('password');\r\n                args = { username, password };\r\n            }\r\n            else {\r\n                args = arg0;\r\n            }\r\n            let url = this.url('user/login');\r\n            let r = yield this.postByJson(url, args);\r\n            if (r == null)\r\n                throw errors_1.errors.unexpectedNullResult();\r\n            return r;\r\n        });\r\n    }\r\n    /**\r\n     * 注册\r\n     * @param mobile 手机号\r\n     * @param password 密码\r\n     * @param smsId 短信编号\r\n     * @param verifyCode 验证码\r\n     */\r\n    register(mobile, password, smsId, verifyCode, data) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!mobile)\r\n                throw errors_1.errors.argumentNull('mobile');\r\n            if (!password)\r\n                throw errors_1.errors.argumentNull('password');\r\n            if (!smsId)\r\n                throw errors_1.errors.argumentNull('smsId');\r\n            if (!verifyCode)\r\n                throw errors_1.errors.argumentNull('verifyCode');\r\n            let url = this.url('user/register');\r\n            let r = yield this.postByJson(url, { mobile, password, smsId, verifyCode, data });\r\n            if (r == null)\r\n                throw errors_1.errors.unexpectedNullResult();\r\n            return r;\r\n        });\r\n    }\r\n    /**\r\n     * 获取用户个人信息\r\n     */\r\n    me() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let url = this.url('user/me');\r\n            let user = yield this.getByJson(url);\r\n            return user;\r\n        });\r\n    }\r\n    /**\r\n     * 获取当前登录用户的角色\r\n     */\r\n    myRoles() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let url = this.url('user/getRoles');\r\n            let roles = yield this.getByJson(url);\r\n            return roles;\r\n        });\r\n    }\r\n    /**\r\n     * 给指定的用户添加角色\r\n     * @param userId 用户编号\r\n     * @param roleIds 多个角色编号\r\n     */\r\n    addUserRoles(userId, roleIds) {\r\n        let url = this.url('user/addRoles');\r\n        return this.postByJson(url, { userId, roleIds });\r\n    }\r\n}\r\nclass RoleModule extends ServiceModule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.resource = {\r\n            /**\r\n             * 获取角色所允许访问的资源 id\r\n             * @param roleId 指定的角色编号\r\n             */\r\n            ids: (roleId) => __awaiter(this, void 0, void 0, function* () {\r\n                if (!roleId)\r\n                    throw errors_1.errors.argumentNull('roleId');\r\n                let url = this.url('role/resourceIds');\r\n                let r = yield this.getByJson(url, { roleId });\r\n                return r || [];\r\n            })\r\n        };\r\n    }\r\n    list() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let url = this.url(\"role/list\");\r\n            return this.get(url);\r\n        });\r\n    }\r\n    item(id) {\r\n        let url = this.url(\"role/item\");\r\n        return this.get(url, { id });\r\n    }\r\n    add(arg1, arg2) {\r\n        let url = this.url(\"role/add\");\r\n        let item;\r\n        if (typeof arg1 == \"string\") {\r\n            item = { name: arg1, remark: arg2 };\r\n        }\r\n        else {\r\n            item = arg1;\r\n        }\r\n        return this.postByJson(url, { item });\r\n    }\r\n    /**\r\n     * 删除角色\r\n     * @param id 要删除的角色编号\r\n     */\r\n    remove(id) {\r\n        let url = this.url(\"role/remove\");\r\n        return this.postByJson(url, { id });\r\n    }\r\n    update(item) {\r\n        let url = this.url(\"role/update\");\r\n        return this.postByJson(url, { item });\r\n    }\r\n    /**\r\n     * 获取角色所允许访问的资源 id\r\n     * @param roleId 指定的角色编号\r\n     */\r\n    resourceIds(roleId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!roleId)\r\n                throw errors_1.errors.argumentNull('roleId');\r\n            let url = this.url('role/resourceIds');\r\n            let r = yield this.getByJson(url, { roleId });\r\n            return r || [];\r\n        });\r\n    }\r\n    /**\r\n     *\r\n     * @param roleId 指定的角色编号\r\n     * @param resourceIds 角色所允许访问的资源编号\r\n     */\r\n    setResource(roleId, resourceIds) {\r\n        if (!roleId)\r\n            throw errors_1.errors.argumentNull('roleId');\r\n        if (!resourceIds)\r\n            throw errors_1.errors.argumentNull('resourceIds');\r\n        let url = this.url('role/setResources');\r\n        return this.postByJson(url, { roleId, resourceIds });\r\n    }\r\n}\r\nclass SMSModule extends ServiceModule {\r\n    /**\r\n     * 发送注册操作验证码\r\n     * @param mobile 接收验证码的手机号\r\n     */\r\n    sendRegisterVerifyCode(mobile) {\r\n        let url = this.url('sms/sendVerifyCode');\r\n        return this.postByJson(url, { mobile, type: 'register' });\r\n    }\r\n    /**\r\n     * 校验验证码\r\n     * @param smsId 验证码信息的 ID 号\r\n     * @param verifyCode 验证码\r\n     */\r\n    checkVerifyCode(smsId, verifyCode) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!smsId)\r\n                throw errors_1.errors.argumentNull('smsId');\r\n            if (!verifyCode)\r\n                throw errors_1.errors.argumentNull('verifycode');\r\n            let url = this.url('sms/checkVerifyCode');\r\n            let r = yield this.postByJson(url, { smsId, verifyCode });\r\n            return r;\r\n        });\r\n    }\r\n    /**\r\n     * 发送重置密码操作验证码\r\n     * @param mobile 接收验证码的手机号\r\n     */\r\n    sendResetVerifyCode(mobile) {\r\n        if (!mobile)\r\n            throw errors_1.errors.argumentNull('mobile');\r\n        let url = this.url('sms/sendVerifyCode');\r\n        return this.postByJson(url, { mobile, type: 'resetPassword' });\r\n    }\r\n}\r\n"],"file":"permission-service.js"}