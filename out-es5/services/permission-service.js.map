{"version":3,"sources":["../../out/services/permission-service.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","service_1","require","errors_1","events_1","PermissionService","self","currentUser","resource","list","url","get","role","item","id","add","postByJson","remove","update","ids","roleId","errors","argumentNull","getByJson","r","args","post","user","unexpectedNullResult","roleIds","token","path","baseUrl","serviceUrlCanntNull","resourceIds","userId","mobile","filter","getUserList","dataItems","deleteByJson","type","smsId","verifyCode","password","Service","loginInfo","events","logout","fire","setStorageLoginInfo","username","login","data","register","roles","userIds"],"mappings":"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","sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst service_1 = require(\"./service\");\r\nconst errors_1 = require(\"../errors\");\r\nconst events_1 = require(\"../events\");\r\nclass PermissionService extends service_1.Service {\r\n    constructor() {\r\n        super();\r\n        this.self = this;\r\n        this.currentUser = {\r\n            resource: {\r\n                list: () => {\r\n                    let url = this.url(\"current-user/resource/list\");\r\n                    return this.get(url);\r\n                }\r\n            }\r\n        };\r\n        this.role = {\r\n            /**\r\n             * 获取角色列表\r\n             */\r\n            list: () => {\r\n                let url = this.url(\"role/list\");\r\n                return this.get(url);\r\n            },\r\n            /**\r\n             * 获取单个角色\r\n             * @param id 要获取的角色编号\r\n             */\r\n            item: (id) => {\r\n                let url = this.url(\"role/item\");\r\n                return this.get(url, { id });\r\n            },\r\n            /**\r\n             * 添加角色\r\n             * @param name 要添加的角色名称\r\n             * @param remark 要添加的角色备注\r\n             */\r\n            add: (item) => {\r\n                let url = this.url(\"role/add\");\r\n                return this.postByJson(url, { item });\r\n            },\r\n            /**\r\n             * 删除角色\r\n             * @param id 要删除的角色编号\r\n             */\r\n            remove: (id) => {\r\n                let url = this.url(\"role/remove\");\r\n                return this.postByJson(url, { id });\r\n            },\r\n            update: (item) => {\r\n                let url = this.url(\"role/update\");\r\n                return this.postByJson(url, { item });\r\n            },\r\n            resource: {\r\n                /**\r\n                 * 获取角色所允许访问的资源 id\r\n                 * @param roleId 指定的角色编号\r\n                 */\r\n                ids: (roleId) => __awaiter(this, void 0, void 0, function* () {\r\n                    if (!roleId)\r\n                        throw errors_1.errors.argumentNull('roleId');\r\n                    let url = this.url('role/resourceIds');\r\n                    let r = yield this.getByJson(url, { roleId });\r\n                    return r || [];\r\n                })\r\n            }\r\n        };\r\n        this.resource = {\r\n            list: (args) => {\r\n                let url = this.url(\"resource/list\");\r\n                return this.getByJson(url, { args });\r\n            },\r\n            item: (id) => {\r\n                let url = this.url(\"resource/item\");\r\n                return this.getByJson(url, { id });\r\n            },\r\n            remove: (id) => {\r\n                let url = this.url(\"resource/remove\");\r\n                return this.post(url, { id });\r\n            },\r\n            add: (item) => {\r\n                let url = this.url(\"resource/add\");\r\n                return this.postByJson(url, { item });\r\n            },\r\n            update: (item) => {\r\n                let url = this.url(\"resource/update\");\r\n                return this.postByJson(url, { item });\r\n            }\r\n        };\r\n        this.user = {\r\n            list: (args) => __awaiter(this, void 0, void 0, function* () {\r\n                let url = this.url('user/list');\r\n                let result = yield this.getByJson(url, { args });\r\n                if (result == null)\r\n                    throw errors_1.errors.unexpectedNullResult();\r\n                return result;\r\n            }),\r\n            update: (item) => __awaiter(this, void 0, void 0, function* () {\r\n                let url = this.url('user/update');\r\n                let result = yield this.postByJson(url, { user: item });\r\n                return result;\r\n            }),\r\n            /**\r\n             * 添加用户信息\r\n             * @param item 用户\r\n             */\r\n            add: (item, roleIds) => __awaiter(this, void 0, void 0, function* () {\r\n                let url = this.url('user/add');\r\n                let result;\r\n                let r = yield this.postByJson(url, { item, roleIds });\r\n                return r;\r\n            })\r\n        };\r\n        this.token = {\r\n            list: (args) => __awaiter(this, void 0, void 0, function* () {\r\n                let url = this.url('token/list');\r\n                let r = this.getByJson(url, { args });\r\n                return r;\r\n            }),\r\n            add: (item) => __awaiter(this, void 0, void 0, function* () {\r\n                let url = this.url(\"token/add\");\r\n                let r = yield this.postByJson(url, { item });\r\n                return r;\r\n            })\r\n        };\r\n    }\r\n    url(path) {\r\n        if (!PermissionService.baseUrl)\r\n            throw errors_1.errors.serviceUrlCanntNull('permissionService');\r\n        return `${PermissionService.baseUrl}/${path}`;\r\n    }\r\n    // //=============================================================\r\n    // // 资源相关\r\n    // /** 添加资源 */\r\n    // async addResource(item: Partial<Resource>) {\r\n    //     if (!item) throw errors.argumentNull('item')\r\n    //     let url = this.url('resource/add')\r\n    //     let result = await this.postByJson<{ id: string }>(url, { item })\r\n    //     Object.assign(item, result)\r\n    //     return result\r\n    // }\r\n    // /** 更新资源 */\r\n    // async updateResource(item: Partial<Resource>) {\r\n    //     if (!item) throw errors.argumentNull('item')\r\n    //     let url = this.url('resource/update')\r\n    //     let result = await this.postByJson(url, { item })\r\n    //     Object.assign(item, result)\r\n    //     return result\r\n    // }\r\n    // /** 获取资源列表 */\r\n    // async getResourceList(args: DataSourceSelectArguments): Promise<DataSourceSelectResult<Resource>> {\r\n    //     if (!args) throw errors.argumentNull('args')\r\n    //     let url = this.url('resource/list')\r\n    //     if (!args.sortExpression)\r\n    //         args.sortExpression = 'sort_number asc'\r\n    //     type T = Resource & { data?: { visible?: boolean } }\r\n    //     let result = await this.getByJson<DataSourceSelectResult<T>>(url, { args })\r\n    //     if (result == null)\r\n    //         throw errors.unexpectedNullResult()\r\n    //     for (let i = 0; i < result.dataItems.length; i++) {\r\n    //         result.dataItems[i].data = result.dataItems[i].data || {}\r\n    //     }\r\n    //     return result\r\n    // }\r\n    // /**\r\n    //  * 删除指定的资源\r\n    //  * @param id 要删除的资源编号\r\n    //  */\r\n    // async deleteResource(id: string) {\r\n    //     if (!id) throw errors.argumentNull('id')\r\n    //     let url = this.url('resource/remove')\r\n    //     return this.postByJson(url, { id })\r\n    // }\r\n    // /**\r\n    //  * 获取指定资源的子按钮\r\n    //  * @param id 资源编号\r\n    //  */\r\n    // async getResourceChildCommands(id: string) {\r\n    //     if (!id) throw errors.argumentNull('id')\r\n    //     let buttonType: ResourceType = 'button'\r\n    //     let filter = `parent_id = '${id}' and type = '${buttonType}'`\r\n    //     let url = `resource/list`\r\n    //     let result = await this.getByJson(url, { filter })\r\n    //     return result\r\n    // }\r\n    //=============================================================\r\n    // 角色相关\r\n    // async getRoles(): Promise<Role[]> {\r\n    //     let url = this.url('role/list')\r\n    //     let r = await this.getByJson<Role[]>(url)\r\n    //     return r || []\r\n    // }\r\n    getRole(id) {\r\n        if (!id)\r\n            throw errors_1.errors.argumentNull('id');\r\n        let url = this.url('role/get');\r\n        return this.getByJson(url, { id });\r\n    }\r\n    /**\r\n     *\r\n     * @param roleId 指定的角色编号\r\n     * @param resourceIds 角色所允许访问的资源编号\r\n     */\r\n    setRoleResource(roleId, resourceIds) {\r\n        if (!roleId)\r\n            throw errors_1.errors.argumentNull('roleId');\r\n        if (!resourceIds)\r\n            throw errors_1.errors.argumentNull('resourceIds');\r\n        let url = this.url('role/setResources');\r\n        return this.postByJson(url, { roleId, resourceIds });\r\n    }\r\n    /**\r\n     * 获取角色所允许访问的资源 id\r\n     * @param roleId 指定的角色编号\r\n     */\r\n    getRoleResourceIds(roleId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!roleId)\r\n                throw errors_1.errors.argumentNull('roleId');\r\n            let url = this.url('role/resourceIds');\r\n            let r = yield this.getByJson(url, { roleId });\r\n            return r || [];\r\n        });\r\n    }\r\n    /** 设置用户角色 */\r\n    setUserRoles(userId, roleIds) {\r\n        if (!userId)\r\n            throw errors_1.errors.argumentNull('userId');\r\n        if (!roleIds)\r\n            throw errors_1.errors.argumentNull('roleIds');\r\n        let url = this.url('user/setRoles');\r\n        return this.postByJson(url, { userId, roleIds });\r\n    }\r\n    // addRole(name: string, remark?: string) {\r\n    //     if (!name) throw errors.argumentNull(\"name\");\r\n    //     let url = this.url(\"role/add\");\r\n    //     return this.postByJson(url, { name, remark });\r\n    // }\r\n    // removeRole(id: string) {\r\n    //     if (!id) throw errors.argumentNull(\"id\");\r\n    //     let url = this.url(\"role/remove\");\r\n    //     return this.postByJson(url, { id });\r\n    // }\r\n    //================================================================\r\n    // 用户相关\r\n    /** 获取用户列表 */\r\n    getUserList(args) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let url = this.url('user/list');\r\n            let result = yield this.getByJson(url, { args });\r\n            if (result == null)\r\n                throw errors_1.errors.unexpectedNullResult();\r\n            return result;\r\n        });\r\n    }\r\n    /** 通过手机获取用户 */\r\n    getUserByMobile(mobile) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!mobile)\r\n                throw errors_1.errors.argumentNull('mobile');\r\n            let args = {};\r\n            args.filter = `mobile = '${mobile}'`;\r\n            let r = yield this.getUserList(args);\r\n            return r.dataItems[0];\r\n        });\r\n    }\r\n    /**\r\n     * 移除当前应用的用户\r\n     * @param userId 要移除的用户编号\r\n     */\r\n    removeUser(userId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!userId)\r\n                throw errors_1.errors.argumentNull('userId');\r\n            let url = this.url('application/removeUser');\r\n            return this.deleteByJson(url, { userId });\r\n        });\r\n    }\r\n    /**\r\n     * 获取当前应用的所有用户\r\n     * @param args 数据源选择参数\r\n     */\r\n    getApplicatinUsers(args) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (args == null)\r\n                throw errors_1.errors.argumentNull('args');\r\n            let url = this.url('application/users');\r\n            let result = yield this.getByJson(url, { args });\r\n            if (result == null)\r\n                throw errors_1.errors.unexpectedNullResult();\r\n            return result;\r\n        });\r\n    }\r\n    /**\r\n     * 发送注册操作验证码\r\n     * @param mobile 接收验证码的手机号\r\n     */\r\n    sendRegisterVerifyCode(mobile) {\r\n        let url = this.url('sms/sendVerifyCode');\r\n        return this.postByJson(url, { mobile, type: 'register' });\r\n    }\r\n    /**\r\n     * 校验验证码\r\n     * @param smsId 验证码信息的 ID 号\r\n     * @param verifyCode 验证码\r\n     */\r\n    checkVerifyCode(smsId, verifyCode) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!smsId)\r\n                throw errors_1.errors.argumentNull('smsId');\r\n            if (!verifyCode)\r\n                throw errors_1.errors.argumentNull('verifycode');\r\n            let url = this.url('sms/checkVerifyCode');\r\n            let r = yield this.postByJson(url, { smsId, verifyCode });\r\n            return r;\r\n        });\r\n    }\r\n    /**\r\n     * 发送重置密码操作验证码\r\n     * @param mobile 接收验证码的手机号\r\n     */\r\n    sendResetVerifyCode(mobile) {\r\n        if (!mobile)\r\n            throw errors_1.errors.argumentNull('mobile');\r\n        let url = this.url('sms/sendVerifyCode');\r\n        return this.postByJson(url, { mobile, type: 'resetPassword' });\r\n    }\r\n    /**\r\n     * 重置密码\r\n     * @param mobile 手机号\r\n     * @param password 新密码\r\n     * @param smsId 短信编号\r\n     * @param verifyCode 验证码\r\n     */\r\n    resetPassword(mobile, password, smsId, verifyCode) {\r\n        if (!mobile)\r\n            throw errors_1.errors.argumentNull('mobile');\r\n        if (!password)\r\n            throw errors_1.errors.argumentNull('password');\r\n        if (!smsId)\r\n            throw errors_1.errors.argumentNull('smsId');\r\n        if (!verifyCode)\r\n            throw errors_1.errors.argumentNull('verifyCode');\r\n        let url = this.url('user/resetPassword');\r\n        return this.postByJson(url, { mobile, password, smsId, verifyCode });\r\n    }\r\n    /**\r\n     * 重置手机号码\r\n     * @param mobile 需要重置的新手机号\r\n     * @param smsId 短信编号\r\n     * @param verifyCode 验证码\r\n     */\r\n    resetMobile(mobile, smsId, verifyCode) {\r\n        if (!mobile)\r\n            throw errors_1.errors.argumentNull('mobile');\r\n        if (!smsId)\r\n            throw errors_1.errors.argumentNull('smsId');\r\n        if (!verifyCode)\r\n            throw errors_1.errors.argumentNull('verifyCode');\r\n        let url = this.url('user/resetMobile');\r\n        return this.postByJson(url, { mobile, smsId, verifyCode });\r\n    }\r\n    /**\r\n     * 退出登录\r\n     */\r\n    logout() {\r\n        if (service_1.Service.loginInfo.value == null)\r\n            return;\r\n        //TODO: 将服务端 token 设置为失效\r\n        events_1.events.logout.fire(this, service_1.Service.loginInfo.value);\r\n        service_1.Service.setStorageLoginInfo(null);\r\n        service_1.Service.loginInfo.value = null;\r\n    }\r\n    /**\r\n     * 登录\r\n     * @param username 用户名\r\n     * @param password 密码\r\n     */\r\n    login(username, password) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!username)\r\n                throw errors_1.errors.argumentNull('username');\r\n            if (!password)\r\n                throw errors_1.errors.argumentNull('password');\r\n            let url = this.url('user/login');\r\n            let r = yield this.postByJson(url, { username, password });\r\n            if (r == null)\r\n                throw errors_1.errors.unexpectedNullResult();\r\n            service_1.Service.loginInfo.value = r;\r\n            service_1.Service.setStorageLoginInfo(r);\r\n            events_1.events.login.fire(this, r);\r\n            return r;\r\n        });\r\n    }\r\n    /**\r\n     * 注册\r\n     * @param mobile 手机号\r\n     * @param password 密码\r\n     * @param smsId 短信编号\r\n     * @param verifyCode 验证码\r\n     */\r\n    register(mobile, password, smsId, verifyCode, data) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!mobile)\r\n                throw errors_1.errors.argumentNull('mobile');\r\n            if (!password)\r\n                throw errors_1.errors.argumentNull('password');\r\n            if (!smsId)\r\n                throw errors_1.errors.argumentNull('smsId');\r\n            if (!verifyCode)\r\n                throw errors_1.errors.argumentNull('verifyCode');\r\n            let url = this.url('user/register');\r\n            let r = yield this.postByJson(url, { mobile, password, smsId, verifyCode, data });\r\n            if (r == null)\r\n                throw errors_1.errors.unexpectedNullResult();\r\n            service_1.Service.setStorageLoginInfo(r);\r\n            events_1.events.register.fire(this, r);\r\n            return r;\r\n        });\r\n    }\r\n    /**\r\n     * 获取用户个人信息\r\n     */\r\n    me() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!service_1.Service.loginInfo.value) {\r\n                return null;\r\n            }\r\n            let url = this.url('user/me');\r\n            let user = yield this.getByJson(url);\r\n            return user;\r\n        });\r\n    }\r\n    /**\r\n     * 获取用户\r\n     * @param userId 用户编号\r\n     */\r\n    getUser(userId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let url = this.url('user/item');\r\n            let user = yield this.getByJson(url, { userId });\r\n            return user;\r\n        });\r\n    }\r\n    // async addUser(item: Partial<User>) {\r\n    //     let url = this.url('user/add')\r\n    //     let result: { id: string }\r\n    //     let r = await this.postByJson<typeof result>(url, { item })\r\n    //     return r\r\n    // }\r\n    /**\r\n     * 更新用户信息\r\n     * @param item 用户\r\n     */\r\n    updateUser(item) {\r\n        let url = this.url('user/update');\r\n        return this.postByJson(url, { user: item });\r\n    }\r\n    /**\r\n     * 获取当前登录用户的角色\r\n     */\r\n    myRoles() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let url = this.url('user/getRoles');\r\n            let roles = yield this.getByJson(url);\r\n            return roles;\r\n        });\r\n    }\r\n    /**\r\n     * 给指定的用户添加角色\r\n     * @param userId 用户编号\r\n     * @param roleIds 多个角色编号\r\n     */\r\n    addUserRoles(userId, roleIds) {\r\n        let url = this.url('user/addRoles');\r\n        return this.postByJson(url, { userId, roleIds });\r\n    }\r\n    /**\r\n     * 获取用角色\r\n     * @param userId 用户编号\r\n     */\r\n    getUserRoles(userId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let url = this.url('role/userRoles');\r\n            let r = yield this.getByJson(url, { userIds: [userId] });\r\n            return r[userId];\r\n        });\r\n    }\r\n}\r\nexports.PermissionService = PermissionService;\r\n"],"file":"permission-service.js"}