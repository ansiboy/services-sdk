{"version":3,"sources":["../../out/services/image-service.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","service_1","require","errors_1","settings_1","ImageService","path","baseUrl","errors","serviceUrlCanntNull","id","width","height","generateImageBase64","settings","noImageText","isBase64","startsWith","url","obj","options","document","notSupportedInNode","canvas","createElement","ctx","getContext","Error","draw","draws","text","toDataURL","imageBase64","argumentNull","i","Image","onload","src","img","drawImage","getImageSize","imageSize","maxWidth","maxHeight","resize","postByJson","image","Service","imageText","canvasWidth","canvasHeight","fontSize","Math","floor","length","bgColor","textColor","fillStyle","fillRect","font","textAlign","textWidth","startX","startY","fillText"],"mappings":"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","sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst service_1 = require(\"./service\");\r\nconst errors_1 = require(\"../errors\");\r\nconst settings_1 = require(\"../settings\");\r\n/** 图片服务，实现图片的上传，获取 */\r\nclass ImageService extends service_1.Service {\r\n    url(path) {\r\n        if (!ImageService.baseUrl)\r\n            throw errors_1.errors.serviceUrlCanntNull('imageService');\r\n        return `${ImageService.baseUrl}/${path}`;\r\n    }\r\n    /** 获取图片的 URL\r\n     * @param id 图片的 ID\r\n     * @param width 图片的宽度，如果不指定则为实际图片的宽度\r\n     * @param height 图片的高度，如果不指定则为实际图片的高度\r\n     */\r\n    imageSource(id, width, height) {\r\n        if (!id) {\r\n            width = width == null ? 200 : width;\r\n            height = height == null ? 100 : height;\r\n            id = this.generateImageBase64(width, height, settings_1.settings.noImageText);\r\n            return id;\r\n        }\r\n        let isBase64 = id.startsWith('data:image');\r\n        if (isBase64) {\r\n            return id;\r\n        }\r\n        let url = this.url('image');\r\n        url = `${url}?id=${id}`;\r\n        if (width != null)\r\n            url = url + `&width=${width}`;\r\n        if (height != null)\r\n            url = url + `&height=${height}`;\r\n        return url;\r\n    }\r\n    generateImageBase64(width, height, obj, options) {\r\n        if (document == null) {\r\n            throw errors_1.errors.notSupportedInNode();\r\n        }\r\n        var canvas = document.createElement('canvas');\r\n        canvas.width = width; //img_width;\r\n        canvas.height = height; //img_height;\r\n        var ctx = canvas.getContext('2d');\r\n        if (ctx == null)\r\n            throw new Error('ccreate canvas context fail.');\r\n        let draw = typeof obj == 'string' ? draws.text(obj, options) : obj;\r\n        draw(ctx, width, height);\r\n        return canvas.toDataURL();\r\n    }\r\n    getImageSize(imageBase64) {\r\n        if (!imageBase64)\r\n            throw errors_1.errors.argumentNull('imageBase64');\r\n        return new Promise((resolve, reject) => {\r\n            var i = new Image();\r\n            i.onload = function () {\r\n                resolve({ width: i.width, height: i.height });\r\n            };\r\n            i.src = imageBase64;\r\n        });\r\n    }\r\n    /**\r\n     * 对图片进行缩放\r\n     * @param imageBase64 图片 base64 格式数据\r\n     * @param width 目标图片的宽度\r\n     * @param height 目标图片的高度\r\n     */\r\n    resize(imageBase64, width, height) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!imageBase64)\r\n                throw errors_1.errors.argumentNull('imageBase64');\r\n            if (!width)\r\n                throw errors_1.errors.argumentNull('width');\r\n            if (!height)\r\n                throw errors_1.errors.argumentNull('height');\r\n            var canvas = document.createElement('canvas'); //.getElementById(\"canvas\");\r\n            var ctx = canvas.getContext(\"2d\");\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n            return yield new Promise((resolve, reject) => {\r\n                var img = new Image();\r\n                img.src = imageBase64;\r\n                img.onload = function () {\r\n                    // width = img.width\r\n                    // height = img.height\r\n                    if (ctx == null)\r\n                        throw 'get canvas context fail';\r\n                    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n                    resolve(canvas.toDataURL());\r\n                };\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * 上传图片\r\n     * @param imageBase64 图片的 base64 数据\r\n     */\r\n    upload(imageBase64) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!imageBase64)\r\n                throw errors_1.errors.argumentNull('imageBase64');\r\n            let url = this.url('upload');\r\n            let imageSize = yield this.getImageSize(imageBase64);\r\n            let maxWidth = 800;\r\n            let maxHeight = 800;\r\n            if (imageSize.width > maxWidth) { // || imageSize.height > maxHeight\r\n                let height = imageSize.height / imageSize.width * maxWidth;\r\n                imageBase64 = yield this.resize(imageBase64, maxWidth, height);\r\n            }\r\n            else if (imageSize.height > maxHeight) {\r\n                let width = imageSize.width / imageSize.height * maxHeight;\r\n                imageBase64 = yield this.resize(imageBase64, width, maxHeight);\r\n            }\r\n            return this.postByJson(url, { image: imageBase64 });\r\n        });\r\n    }\r\n    /**\r\n     *\r\n     * @param id 删除图片\r\n     */\r\n    remove(id) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!id)\r\n                throw errors_1.errors.argumentNull('id');\r\n            let url = this.url(\"remove\");\r\n            return this.postByJson(url, { id });\r\n        });\r\n    }\r\n}\r\nexports.ImageService = ImageService;\r\nlet draws = {\r\n    text: (imageText, options) => {\r\n        return (ctx, canvasWidth, canvasHeight) => {\r\n            // let fontSize1 = Math.floor(canvasHeight / 3 * 0.8);\r\n            let fontSize = Math.floor((canvasWidth / imageText.length) * 0.6);\r\n            let bgColor = 'whitesmoke';\r\n            let textColor = '#999';\r\n            // let fontSize = Math.min(fontSize1, fontSize2);\r\n            options = options || {};\r\n            ctx.fillStyle = options.bgColor || bgColor; //'whitesmoke';\r\n            ctx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n            // 设置字体\r\n            ctx.font = `Bold ${options.fontSize}px Arial`;\r\n            // 设置对齐方式\r\n            ctx.textAlign = \"left\";\r\n            // 设置填充颜色\r\n            ctx.fillStyle = options.textColor || textColor; //\"#999\";\r\n            let textWidth = fontSize * imageText.length;\r\n            let startX = Math.floor((canvasWidth - textWidth) * 0.5);\r\n            let startY = Math.floor((canvasHeight - (options.fontSize || fontSize)) * 0.3);\r\n            // 设置字体内容，以及在画布上的位置\r\n            ctx.fillText(imageText, startX, Math.floor(canvasHeight * 0.6));\r\n        };\r\n    }\r\n};\r\n"],"file":"image-service.js"}